[project]
name = "opsd-project"
version = "0.1.0"
description = "OPSD python project"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "colorama==0.4.6",
    "coverage==7.6.12",
    "iniconfig==2.0.0",
    "jinja2==3.1.5",
    "markupsafe==3.0.2",
    "mypy==1.15.0",
    "mypy-extensions==1.0.0",
    "packaging==24.2",
    "pluggy==1.5.0",
    "pytest==8.3.5",
    "pytest-cov==6.0.0",
    "pytest-html==4.1.1",
    "pytest-metadata==3.1.1",
    "ruff==0.9.9",
    "typing-extensions==4.12.2",
]


[project.scripts]
opsd-project = "opsd_project:main"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.ruff]
line-length = 100
select = ["ALL"]  # Enable all rules in Ruff
ignore = [
    "E501",  # Ignore line length issues (100 characters is already strict enough)
    "ANN101", # Ignore missing type annotation for `self` (self and cls don't need type hints)
    "D100",  # Ignore missing module-level docstring (not always necessary in small projects)
    "D103",  # Ignore missing function docstring (test functions should be self-explanatory)
]

[tool.ruff.lint]
fixable = ["ALL"]  # Allow Ruff to auto-fix all issues

[tool.mypy]
strict = true  # Enable strict mode for type checking

disallow_untyped_calls = true  # Prevent calling functions without type annotations
disallow_untyped_defs = true  # Prevent defining functions without type annotations
disallow_incomplete_defs = true  # Ensure all function annotations are complete

warn_unused_ignores = true  # Warn if `# type: ignore` is used but unnecessary
warn_redundant_casts = true  # Warn about redundant type casts
warn_unreachable = true  # Warn about unreachable code
warn_return_any = true  # Warn if a function returns `Any`
warn_unused_configs = true  # Warn about unused mypy configurations

ignore_missing_imports = true  # Ignore missing imports (some external libraries may lack type hints)